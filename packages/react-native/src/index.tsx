// Generated by uniffi-bindgen-react-native
import installer from './NativeBreezSdkSparkReactNative';

// Register the rust crate with Hermes
// - the boolean flag ensures this loads exactly once, even if the JS
//   code is reloaded (e.g. during development with metro).
let rustInstalled = false;
if (!rustInstalled) {
  installer.installRustCrate();
  rustInstalled = true;
}

// Export the generated bindings to the app.
export * from './generated/breez_sdk_common';
export * from './generated/breez_sdk_spark';
export * from './generated/breez_sdk_spark_bindings';

// Now import the bindings so we can:
// - intialize them
// - export them as namespaced objects as the default export.
import * as breez_sdk_common from './generated/breez_sdk_common';
import * as breez_sdk_spark from './generated/breez_sdk_spark';
import * as breez_sdk_spark_bindings from './generated/breez_sdk_spark_bindings';

// Initialize the generated bindings: mostly checksums, but also callbacks.
// - the boolean flag ensures this loads exactly once, even if the JS code
//   is reloaded (e.g. during development with metro).
let initialized = false;
if (!initialized) {
  breez_sdk_common.default.initialize();
  breez_sdk_spark.default.initialize();
  breez_sdk_spark_bindings.default.initialize();
  initialized = true;
}

// This provides parity with the index.web.ts version of this file.
// The web version relies on an asynchronous fetch, which this doesn't
// need, so we just no-op.
export async function uniffiInitAsync() {
  // NOOP.
}

// Export the crates as individually namespaced objects.
export default {
  breez_sdk_common,
  breez_sdk_spark,
  breez_sdk_spark_bindings,
};

