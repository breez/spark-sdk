[package]
name = "breez-sdk-common"
edition = "2024"
version.workspace = true

[features]
default = ["default-tls"]
browser-tests = [] # Enable browser wasm-pack tests
# flutter = ["dep:flutter_rust_bridge"]
test-utils = []
uniffi = ["dep:uniffi"]
# TLS features
default-tls = ["reqwest/default-tls", "spark-wallet/default-tls"]
rustls-tls = ["reqwest/rustls-tls", "spark-wallet/rustls-tls"]
native-tls = ["reqwest/native-tls", "spark-wallet/native-tls"]

[lib]
crate-type = ["staticlib", "cdylib", "lib"]
name = "breez_sdk_common"

[lints]
workspace = true

[dependencies]
aes.workspace = true
anyhow.workspace = true
async-trait.workspace = true
base64.workspace = true
bech32.workspace = true
bitcoin.workspace = true
cbc = { workspace = true, features = ["std"] }
# flutter_rust_bridge = { workspace = true, optional = true}
hex.workspace = true
lightning.workspace = true
macros.workspace = true
percent-encoding-rfc3986.workspace = true
prost.workspace = true
reqwest.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
strum = { workspace = true, features = ["derive"] }
thiserror.workspace = true
tokio.workspace = true
tracing.workspace = true
spark.workspace = true
web-time.workspace = true
spark-wallet.workspace = true
uniffi = { workspace = true, optional = true }

# Non-Wasm dependencies
[target.'cfg(not(all(target_family = "wasm", target_os = "unknown")))'.dependencies]
hickory-resolver = { workspace = true, features = ["dnssec-ring"] }
prost.workspace = true
tonic = { workspace = true, features = [
    "channel",
    "codegen",
    "prost",
    "tls",
    "tls-roots",
    "tls-webpki-roots",
    "transport",
] }

# WASM dependencies
[target.'cfg(all(target_family = "wasm", target_os = "unknown"))'.dependencies]
dns-parser.workspace = true
tonic = { workspace = true, features = ["codegen", "prost"] }
tonic-web-wasm-client.workspace = true

# Wasm dev dependencies
[target.'cfg(all(target_family = "wasm", target_os = "unknown"))'.dev-dependencies]
wasm-bindgen-test.workspace = true
getrandom = { version = "0.2", features = ["js"] }

[dev-dependencies]
rand.workspace = true

[build-dependencies]
tonic-build = { workspace = true }
uniffi = { workspace = true, features = ["build"], optional = true }
