[package]
name = "spark"
version.workspace = true
edition = "2024"

[features]
default = ["default-tls"]
browser-tests = [] # Enable browser wasm-pack tests
# TLS features
default-tls = ["reqwest/default-tls"]
rustls-tls = ["reqwest/rustls-tls"]
native-tls = ["reqwest/native-tls"]

[dependencies]
async-trait.workspace = true
base64.workspace = true
bitcoin = { workspace = true, features = ["rand"] }
bytes.workspace = true
chrono = { workspace = true, features = ["serde"] }
ecies.workspace = true
enum_to_enum.workspace = true
frost-core.workspace = true
frost-secp256k1-tr.workspace = true
futures.workspace = true
graphql_client.workspace = true
hex.workspace = true
http.workspace = true
http-body.workspace = true
http-body-util.workspace = true
k256 = { workspace = true, features = ["arithmetic", "schnorr", "ecdsa"] }
lightning-invoice.workspace = true
macros.workspace = true
prost.workspace = true
prost-types.workspace = true
rand.workspace = true
reqwest.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["sync"] }
tokio_with_wasm.workspace = true
tower-service.workspace = true
tracing.workspace = true
web-time.workspace = true

# Non-Wasm dependencies
[target.'cfg(not(all(target_family = "wasm", target_os = "unknown")))'.dependencies]
rustls.workspace = true
tonic = { workspace = true, features = [
    "channel",
    "codegen",
    "prost",
    "tls",
    "tls-roots",
    "tls-webpki-roots",
    "transport",
] }
uuid.workspace = true

# WASM dependencies
[target.'cfg(all(target_family = "wasm", target_os = "unknown"))'.dependencies]
tonic = { workspace = true, features = [
    "codegen",
    "prost",
] }
tonic-web-wasm-client.workspace = true
uuid = { workspace = true, features = ["js"] }

# WASM dev dependencies
[target.'cfg(all(target_family = "wasm", target_os = "unknown"))'.dev-dependencies]
wasm-bindgen-test.workspace = true

[build-dependencies]
tonic.workspace = true
tonic-build.workspace = true
