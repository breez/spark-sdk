name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Clippy
        run: make cargo-clippy-check

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Format Check
        run: make fmt-check

  itest:
    name: Integration test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: make itest

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: make cargo-test

      - name: Check git status
        uses: ./.github/actions/check-git-status
  
  breez-test:
    name: Breez integration tests
    runs-on: ubuntu-latest
    env:
      FAUCET_USERNAME: ${{ secrets.FAUCET_USERNAME }}
      FAUCET_PASSWORD: ${{ secrets.FAUCET_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: make breez-itest

  wasm-clippy:
    name: Wasm clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Clippy
        run: make wasm-clippy-check

  wasm-test:
    name: Wasm test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: make wasm-test

      - name: Check git status
        uses: ./.github/actions/check-git-status

  flutter:
    name: Flutter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.29.0

      - name: Generate bindings
        working-directory: packages/flutter
        run: make generate-bindings-build-release

  docs-rust:
    name: Docs (rust)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p rust

  docs-wasm:
    name: Docs (wasm)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p wasm

  docs-flutter:
    name: Docs (flutter)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.29.0

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p flutter

  docs-go:
    name: Docs (go)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p go

  docs-python:
    name: Docs (python)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p python

  docs-kotlin-mpp:
    name: Docs (kotlin-mpp)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p kotlin-mpp

  docs-swift:
    name: Docs (swift)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p swift

  docs-react-native:
    name: Docs (react-native)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup build environment
        uses: ./.github/actions/setup-build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust targets (only iOS needed)
        run: |
          rustup target add aarch64-apple-ios aarch64-apple-ios-sim x86_64-apple-ios

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Run Check doc snippets
        run: |
          cargo xtask check-doc-snippets -p react-native
